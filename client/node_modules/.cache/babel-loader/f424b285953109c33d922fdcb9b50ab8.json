{"ast":null,"code":"var _jsxFileName = \"/Users/tenzintashi/Colz/Coding Files/spotify-playlist-downloader/src/Downloader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { XGrid } from '@material-ui/x-grid';\nimport { useDemoData } from '@material-ui/x-grid-data-generator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Downloader({\n  spotify\n}) {\n  _s();\n\n  const [user, setUser] = useState(() => spotify.getMe().then(user => {\n    return user;\n  }));\n  console.log(\"user from downloader => \", user);\n  const {\n    data\n  } = useDemoData({\n    dataSet: 'Commodity',\n    rowLength: 100000,\n    editable: true\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 520,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(XGrid, { ...data,\n      loading: data.rows.length === 0,\n      rowHeight: 38,\n      checkboxSelection: true,\n      disableSelectionOnClick: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Downloader, \"Q7y4a/+m+GNOub0D2qQoO8E+lo4=\", false, function () {\n  return [useDemoData];\n});\n\n_c = Downloader;\nexport default Downloader;\n\nvar _c;\n\n$RefreshReg$(_c, \"Downloader\");","map":{"version":3,"sources":["/Users/tenzintashi/Colz/Coding Files/spotify-playlist-downloader/src/Downloader.js"],"names":["React","useState","XGrid","useDemoData","Downloader","spotify","user","setUser","getMe","then","console","log","data","dataSet","rowLength","editable","height","width","rows","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,WAAT,QAA4B,oCAA5B;;;AAIA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAiC;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,MAAMI,OAAO,CAACG,KAAR,GAClCC,IADkC,CAC5BH,IAAD,IAAU;AACZ,WAAOA,IAAP;AACH,GAHkC,CAAP,CAAhC;AAKAI,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCL,IAAxC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAWT,WAAW,CAAC;AACzBU,IAAAA,OAAO,EAAE,WADgB;AAEzBC,IAAAA,SAAS,EAAE,MAFc;AAGzBC,IAAAA,QAAQ,EAAE;AAHe,GAAD,CAA5B;AAKA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAAZ;AAAA,2BACI,QAAC,KAAD,OACQL,IADR;AAEI,MAAA,OAAO,EAAEA,IAAI,CAACM,IAAL,CAAUC,MAAV,KAAqB,CAFlC;AAGI,MAAA,SAAS,EAAE,EAHf;AAII,MAAA,iBAAiB,MAJrB;AAKI,MAAA,uBAAuB;AAL3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAvBQf,U;UAOYD,W;;;KAPZC,U;AAyBT,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react'\nimport { XGrid } from '@material-ui/x-grid'\nimport { useDemoData } from '@material-ui/x-grid-data-generator';\n\n\n\nfunction Downloader({ spotify }) {\n    const [user, setUser] = useState(() => spotify.getMe()\n        .then((user) => {\n            return user;\n        })\n        );\n    console.log(\"user from downloader => \", user);\n    const { data } = useDemoData({\n        dataSet: 'Commodity',\n        rowLength: 100000,\n        editable: true,\n    });\n    return (\n        <div style={{ height: 520, width: '100%' }}>\n            <XGrid\n                {...data}\n                loading={data.rows.length === 0}\n                rowHeight={38}\n                checkboxSelection\n                disableSelectionOnClick\n            />\n        </div>\n    )\n}\n\nexport default Downloader\n"]},"metadata":{},"sourceType":"module"}