{"ast":null,"code":"var _jsxFileName = \"/Users/tenzintashi/Colz/Coding Files/spotify-playlist-downloader/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport './App.css';\nimport { useDataLayerValue } from './DataLayer';\nimport Login from './Login';\nimport { getTokenFromUrl } from './spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  const [{\n    token\n  }, dispatch] = useDataLayerValue();\n  const [other_user, setOtherUser] = useState(\"d3miwarrior\");\n  useEffect(() => {\n    // Set token\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    if (_token) {\n      spotify.setAccessToken(_token);\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      });\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: spotify\n      });\n      spotify.getUserPlaylists(other_user).then(function (data) {\n        dispatch({\n          type: \"SET_OTHER_USER_PLAYLISTS\",\n          other_user\n        });\n        console.log('Retrieved playlists', data);\n      }, function (err) {\n        console.log('Something went wrong!', err);\n      });\n      spotify.getMe().then(user => {\n        dispatch({\n          type: \"SET_USER\",\n          user\n        });\n      });\n      spotify.getUserPlaylists().then(playlists => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists\n        });\n      });\n      spotify.getPlaylist(\"2ILLL6Ep7x6ahuHoSHvptu\").then(response => dispatch({\n        type: \"SET_DISCOVER_WEEKLY\",\n        discover_weekly: response\n      }));\n    }\n  }, [token, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"H/78/d3J6BTEAGOBL28yXOfq7QA=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tenzintashi/Colz/Coding Files/spotify-playlist-downloader/src/App.js"],"names":["React","useState","useEffect","SpotifyWebApi","useDataLayerValue","Login","getTokenFromUrl","spotify","App","token","dispatch","other_user","setOtherUser","hash","window","location","_token","access_token","setAccessToken","type","getUserPlaylists","then","data","console","log","err","getMe","user","playlists","getPlaylist","response","discover_weekly"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAO,WAAP;AACA,SAASC,iBAAT,QAAkC,aAAlC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,eAAT,QAAgC,WAAhC;;AAEA,MAAMC,OAAO,GAAG,IAAIJ,aAAJ,EAAhB;;AAEA,SAASK,GAAT,GAAe;AAAA;;AACb,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAYC,QAAZ,IAAwBN,iBAAiB,EAA/C;AACA,QAAM,CAACO,UAAD,EAAaC,YAAb,IAA6BX,QAAQ,CAAC,aAAD,CAA3C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMW,IAAI,GAAGP,eAAe,EAA5B;AACAQ,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,QAAIG,MAAM,GAAGH,IAAI,CAACI,YAAlB;;AAEA,QAAID,MAAJ,EAAY;AAEVT,MAAAA,OAAO,CAACW,cAAR,CAAuBF,MAAvB;AAEAN,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAE,WADC;AAEPV,QAAAA,KAAK,EAAEO;AAFA,OAAD,CAAR;AAIAN,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAE,aADC;AAEPZ,QAAAA,OAAO,EAAEA;AAFF,OAAD,CAAR;AAIAA,MAAAA,OAAO,CAACa,gBAAR,CAAyBT,UAAzB,EACGU,IADH,CACQ,UAAUC,IAAV,EAAgB;AACpBZ,QAAAA,QAAQ,CAAC;AACPS,UAAAA,IAAI,EAAE,0BADC;AAEPR,UAAAA;AAFO,SAAD,CAAR;AAIAY,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,IAAnC;AACH,OAPD,EAOE,UAASG,GAAT,EAAc;AACdF,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCC,GAArC;AACD,OATD;AAUAlB,MAAAA,OAAO,CAACmB,KAAR,GAAgBL,IAAhB,CAAsBM,IAAD,IAAU;AAC7BjB,QAAAA,QAAQ,CAAC;AACPS,UAAAA,IAAI,EAAE,UADC;AAEPQ,UAAAA;AAFO,SAAD,CAAR;AAID,OALD;AAMApB,MAAAA,OAAO,CAACa,gBAAR,GAA2BC,IAA3B,CAAiCO,SAAD,IAAe;AAC7ClB,QAAAA,QAAQ,CAAC;AACPS,UAAAA,IAAI,EAAE,eADC;AAEPS,UAAAA;AAFO,SAAD,CAAR;AAID,OALD;AAMArB,MAAAA,OAAO,CAACsB,WAAR,CAAoB,wBAApB,EAA8CR,IAA9C,CAAoDS,QAAD,IACjDpB,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAE,qBADC;AAEPY,QAAAA,eAAe,EAAED;AAFV,OAAD,CADV;AAMD;AACF,GA/CQ,EA+CN,CAACrB,KAAD,EAAOC,QAAP,CA/CM,CAAT;AAgDA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA1DQF,G;UACuBJ,iB;;;KADvBI,G;AA4DT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport './App.css';\nimport { useDataLayerValue } from './DataLayer';\nimport Login from './Login';\nimport { getTokenFromUrl } from './spotify';\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token }, dispatch] = useDataLayerValue();\n  const [other_user, setOtherUser] = useState(\"d3miwarrior\");\n\n  useEffect(() => {\n    // Set token\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    if (_token) {\n      \n      spotify.setAccessToken(_token);\n\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: spotify,\n      });\n      spotify.getUserPlaylists(other_user)\n        .then(function (data) {\n          dispatch({\n            type: \"SET_OTHER_USER_PLAYLISTS\",\n            other_user,\n          })\n          console.log('Retrieved playlists', data);\n      },function(err) {\n        console.log('Something went wrong!', err);\n      });\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user,\n        });\n      });\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists,\n        });\n      });\n      spotify.getPlaylist(\"2ILLL6Ep7x6ahuHoSHvptu\").then((response) =>\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        })\n      );\n    }\n  }, [token,dispatch]);\n  return (\n    <div className=\"app\">\n      <Login />\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}