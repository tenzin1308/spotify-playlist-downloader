{"ast":null,"code":"var _jsxFileName = \"/Users/tenzintashi/Colz/Coding Files/spotify-playlist-downloader/src/Downloader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDataLayerValue } from './DataLayer';\nimport { XGrid } from '@material-ui/x-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Downloader({\n  spotify\n}) {\n  _s();\n\n  const [songs, setSongs] = useState(null);\n  useEffect(() => {\n    console.log(\"playlists => \", playlists);\n    console.log(\"playlists items => \", playlists.items); // if (playlists !== null) {\n    //     console.log(\"playlists => \", playlists);\n    //     console.log(\"playlists items => \", playlists.items);\n    //     setSongs(playlists.items);\n    // }\n\n    console.log(\"songs => \", songs);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 520,\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Downloader, \"3wFK5YiRiSgYrdup5NV74YqHWXg=\");\n\n_c = Downloader;\nexport default Downloader;\n\nvar _c;\n\n$RefreshReg$(_c, \"Downloader\");","map":{"version":3,"sources":["/Users/tenzintashi/Colz/Coding Files/spotify-playlist-downloader/src/Downloader.js"],"names":["React","useState","useEffect","useDataLayerValue","XGrid","Downloader","spotify","songs","setSongs","console","log","playlists","items","height","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,iBAAT,QAAkC,aAAlC;AACA,SAASC,KAAT,QAAsB,qBAAtB;;;AAGA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAiC;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,SAA7B;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCC,SAAS,CAACC,KAA7C,EAFY,CAGZ;AACA;AACA;AACA;AACA;;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,KAAzB;AACH,GATQ,EASN,EATM,CAAT;AAWA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEM,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,EAAE;AAAtB;AAAZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAzBQT,U;;KAAAA,U;AA2BT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useDataLayerValue } from './DataLayer'\nimport { XGrid } from '@material-ui/x-grid'\n\n\nfunction Downloader({ spotify }) {\n    const [songs, setSongs] = useState(null);\n\n    useEffect(() => {\n        console.log(\"playlists => \", playlists);\n        console.log(\"playlists items => \", playlists.items);\n        // if (playlists !== null) {\n        //     console.log(\"playlists => \", playlists);\n        //     console.log(\"playlists items => \", playlists.items);\n        //     setSongs(playlists.items);\n        // }\n        console.log(\"songs => \", songs);\n    }, []);\n\n    return (\n        <div style={{ height: 520, width: '100%' }}>\n            {/* <XGrid\n                {...songs}\n                loading={songs.rows.length === 0}\n                rowHeight={38}\n                checkboxSelection\n                disableSelectionOnClick\n            /> */}\n        </div>\n    )\n}\n\nexport default Downloader\n"]},"metadata":{},"sourceType":"module"}