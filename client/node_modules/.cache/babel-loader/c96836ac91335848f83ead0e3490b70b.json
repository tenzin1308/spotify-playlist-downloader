{"ast":null,"code":"var _jsxFileName = \"/Users/tenzintashi/Colz/Coding Files/spotify-playlist-downloader/src/Downloader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDataLayerValue } from './DataLayer';\nimport { XGrid } from '@material-ui/x-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Downloader({\n  spotify\n}) {\n  _s();\n\n  const [{\n    playlists\n  }, dispatch] = useDataLayerValue();\n  const {\n    data\n  } = useDemoData({\n    dataSet: 'Commodity',\n    rowLength: 100000,\n    editable: false\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 520,\n      width: '100%'\n    },\n    children: user && typeof user.display_name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Downloader, \"UnUW+PW0tIcZNDNn3ZVE75u889M=\", true, function () {\n  return [useDataLayerValue];\n});\n\n_c = Downloader;\nexport default Downloader;\n\nvar _c;\n\n$RefreshReg$(_c, \"Downloader\");","map":{"version":3,"sources":["/Users/tenzintashi/Colz/Coding Files/spotify-playlist-downloader/src/Downloader.js"],"names":["React","useState","useDataLayerValue","XGrid","Downloader","spotify","playlists","dispatch","data","useDemoData","dataSet","rowLength","editable","height","width","user","display_name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,QAAkC,aAAlC;AACA,SAASC,KAAT,QAAsB,qBAAtB;;;AAGA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAiC;AAAA;;AAC7B,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAgBC,QAAhB,IAA4BL,iBAAiB,EAAnD;AAEA,QAAM;AAAEM,IAAAA;AAAF,MAAWC,WAAW,CAAC;AACzBC,IAAAA,OAAO,EAAE,WADgB;AAEzBC,IAAAA,SAAS,EAAE,MAFc;AAGzBC,IAAAA,QAAQ,EAAE;AAHe,GAAD,CAA5B;AAKA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAAZ;AAAA,cACKC,IAAI,IAAE,OAAOA,IAAI,CAACC;AADvB;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GApBQZ,U;UAC6BF,iB;;;KAD7BE,U;AAsBT,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useDataLayerValue } from './DataLayer'\nimport { XGrid } from '@material-ui/x-grid'\n\n\nfunction Downloader({ spotify }) {\n    const [{ playlists }, dispatch] = useDataLayerValue();\n\n    const { data } = useDemoData({\n        dataSet: 'Commodity',\n        rowLength: 100000,\n        editable: false,\n    });\n    return (\n        <div style={{ height: 520, width: '100%' }}>\n            {user&&typeof(user.display_name)}\n            {/* <XGrid\n                {...data}\n                loading={data.rows.length === 0}\n                rowHeight={38}\n                checkboxSelection\n                disableSelectionOnClick\n            /> */}\n        </div>\n    )\n}\n\nexport default Downloader\n"]},"metadata":{},"sourceType":"module"}