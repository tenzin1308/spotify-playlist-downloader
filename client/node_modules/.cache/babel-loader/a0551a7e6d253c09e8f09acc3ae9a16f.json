{"ast":null,"code":"var _jsxFileName = \"/Users/tenzintashi/Colz/Coding Files/spotify-playlist-downloader/src/Downloader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDataLayerValue } from './DataLayer';\nimport { XGrid } from '@material-ui/x-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Downloader({\n  spotify\n}) {\n  _s();\n\n  const [{\n    playlists\n  }, dispatch] = useDataLayerValue();\n  const [songs, setSongs] = useState([]);\n\n  if (playlists !== undefined) {\n    console.log(\"playlist\", playlists);\n    setSongs(playlists.items);\n  }\n\n  if (songs !== []) {\n    console.log(\"songs\", songs);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 520,\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Downloader, \"yadBxxvxezctnnpm95QB5pSJrGY=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = Downloader;\nexport default Downloader;\n\nvar _c;\n\n$RefreshReg$(_c, \"Downloader\");","map":{"version":3,"sources":["/Users/tenzintashi/Colz/Coding Files/spotify-playlist-downloader/src/Downloader.js"],"names":["React","useState","useEffect","useDataLayerValue","XGrid","Downloader","spotify","playlists","dispatch","songs","setSongs","undefined","console","log","items","height","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,iBAAT,QAAkC,aAAlC;AACA,SAASC,KAAT,QAAsB,qBAAtB;;;AAGA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAiC;AAAA;;AAC7B,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAgBC,QAAhB,IAA4BL,iBAAiB,EAAnD;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AACA,MAAIM,SAAS,KAAKI,SAAlB,EAA6B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,SAAxB;AACAG,IAAAA,QAAQ,CAACH,SAAS,CAACO,KAAX,CAAR;AAEH;;AACD,MAAIL,KAAK,KAAK,EAAd,EAAkB;AACdG,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;AAEH;;AAGD,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEM,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,EAAE;AAAtB;AAAZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAzBQX,U;UAC6BF,iB;;;KAD7BE,U;AA2BT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useDataLayerValue } from './DataLayer'\nimport { XGrid } from '@material-ui/x-grid'\n\n\nfunction Downloader({ spotify }) {\n    const [{ playlists }, dispatch] = useDataLayerValue();\n    const [songs, setSongs] = useState([]);\n    if (playlists !== undefined) {\n        console.log(\"playlist\", playlists);\n        setSongs(playlists.items);\n        \n    }\n    if (songs !== []) {\n        console.log(\"songs\", songs);\n        \n    }\n\n\n    return (\n        <div style={{ height: 520, width: '100%' }}>\n            {/* <XGrid\n                {...songs}\n                loading={songs.rows.length === 0}\n                rowHeight={38}\n                checkboxSelection\n                disableSelectionOnClick\n            /> */}\n        </div>\n    )\n}\n\nexport default Downloader\n"]},"metadata":{},"sourceType":"module"}