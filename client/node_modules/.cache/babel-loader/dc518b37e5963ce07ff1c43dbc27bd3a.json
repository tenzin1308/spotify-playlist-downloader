{"ast":null,"code":"var _jsxFileName = \"/Users/tenzintashi/Colz/Coding Files/spotify-playlist-downloader/src/Playlists.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { DataLayer } from './DataLayer';\nimport './Playlists.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Playlists({\n  spotify,\n  images,\n  title,\n  id\n}) {\n  _s();\n\n  const [{\n    songs\n  }] = useDataLayerValue();\n  const [s, setS] = useState([]);\n\n  const onClickHandler = () => {\n    spotify.getPlaylist(\"2ILLL6Ep7x6ahuHoSHvptu\").then(response => console.log(response.data) // dispatch({\n    //     type: \"SET_SONGS\",\n    //     discover_weekly: response,\n    // })\n    );\n    console.log(s);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playLists\",\n    onClick: () => onClickHandler,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playLists__info\",\n      children: [images[0] !== undefined ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[0].url,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 44\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://th.bing.com/th/id/OIP.khK65de-Bgy68D6JheAk3QHaHa?pid=ImgDet&rs=1\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 81\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Playlists, \"YqKDwPQ5hE+zZWNfSvE36Hg7TB4=\", true);\n\n_c = Playlists;\nexport default Playlists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlists\");","map":{"version":3,"sources":["/Users/tenzintashi/Colz/Coding Files/spotify-playlist-downloader/src/Playlists.js"],"names":["React","useState","DataLayer","Playlists","spotify","images","title","id","songs","useDataLayerValue","s","setS","onClickHandler","getPlaylist","then","response","console","log","data","undefined","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAO,iBAAP;;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA;AAA1B,CAAnB,EAAmD;AAAA;;AAC/C,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,IAAcC,iBAAiB,EAArC;AACA,QAAM,CAACC,CAAD,EAAIC,IAAJ,IAAYV,QAAQ,CAAC,EAAD,CAA1B;;AACA,QAAMW,cAAc,GAAG,MAAM;AACzBR,IAAAA,OAAO,CAACS,WAAR,CAAoB,wBAApB,EAA8CC,IAA9C,CAAoDC,QAAD,IAC/CC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,CADJ,CAEI;AACA;AACA;AACA;AALJ;AAOAF,IAAAA,OAAO,CAACC,GAAR,CAAYP,CAAZ;AACH,GATD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAE,MAAKE,cAAzC;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,iBACKP,MAAM,CAAC,CAAD,CAAN,KAAcc,SAAd,gBAA0B;AAAK,QAAA,GAAG,EAAEd,MAAM,CAAC,CAAD,CAAN,CAAUe,GAApB;AAAyB,QAAA,GAAG,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,cAA1B,gBAA+D;AAAK,QAAA,GAAG,EAAC,0EAAT;AAAoF,QAAA,GAAG,EAAC;AAAxF;AAAA;AAAA;AAAA;AAAA,cADpE,eAGI;AAAA,kBAAMd;AAAN;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAtBQH,S;;KAAAA,S;AAwBT,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport { DataLayer } from './DataLayer';\nimport './Playlists.css'\n\nfunction Playlists({ spotify, images, title, id }) {\n    const [{ songs }] = useDataLayerValue();\n    const [s, setS] = useState([]);\n    const onClickHandler = () => {\n        spotify.getPlaylist(\"2ILLL6Ep7x6ahuHoSHvptu\").then((response) =>\n            console.log(response.data)\n            // dispatch({\n            //     type: \"SET_SONGS\",\n            //     discover_weekly: response,\n            // })\n        );\n        console.log(s)\n    }\n    return (\n        <div className=\"playLists\" onClick={()=> onClickHandler}>\n            <div className=\"playLists__info\">\n                {images[0] !== undefined ? <img src={images[0].url} alt=\"\" /> : <img src=\"https://th.bing.com/th/id/OIP.khK65de-Bgy68D6JheAk3QHaHa?pid=ImgDet&rs=1\" alt=\"\" />}\n                \n                <h1 >{title}</h1>\n            </div>\n        </div>\n    )\n}\n\nexport default Playlists\n"]},"metadata":{},"sourceType":"module"}