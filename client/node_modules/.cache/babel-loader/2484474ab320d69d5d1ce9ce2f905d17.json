{"ast":null,"code":"var _jsxFileName = \"/Users/tenzintashi/Colz/Coding Files/spotify-playlist-downloader/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport './App.css';\nimport { useDataLayerValue } from './DataLayer';\nimport Downloader from './Downloader';\nimport Login from './Login';\nimport { getTokenFromUrl } from './spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  const [{\n    token,\n    user\n  }, dispatch] = useDataLayerValue();\n  const [other_user, setOtherUser] = useState(\"d3miwarrior\");\n  useEffect(() => {\n    // Set token\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    if (_token) {\n      console.log(_token);\n      spotify.setAccessToken(_token);\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      });\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: spotify\n      });\n      spotify.getUserPlaylists(other_user).then(function (data) {\n        // dispatch({\n        //   type: \"SET_OTHER_USER_PLAYLISTS\",\n        //   other_user,\n        // });\n        console.log('Retrieved playlists', data);\n      }, function (err) {\n        console.log('Something went wrong!', err);\n      });\n      spotify.getMe().then(user => {\n        dispatch({\n          type: \"SET_USER\",\n          user\n        });\n      });\n      spotify.getUserPlaylists().then(playlists => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists\n        });\n      });\n      spotify.getPlaylist(\"2ILLL6Ep7x6ahuHoSHvptu\").then(response => dispatch({\n        type: \"SET_DISCOVER_WEEKLY\",\n        discover_weekly: response\n      }));\n    }\n  }, [token, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [!token && /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 18\n    }, this), token && /*#__PURE__*/_jsxDEV(Downloader, {\n      spotify: spotify,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tIcQ9xaKJwbHcHtSxQx1Y+cPST0=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tenzintashi/Colz/Coding Files/spotify-playlist-downloader/src/App.js"],"names":["React","useState","useEffect","SpotifyWebApi","useDataLayerValue","Downloader","Login","getTokenFromUrl","spotify","App","token","user","dispatch","other_user","setOtherUser","hash","window","location","_token","access_token","console","log","setAccessToken","type","getUserPlaylists","then","data","err","getMe","playlists","getPlaylist","response","discover_weekly"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAO,WAAP;AACA,SAASC,iBAAT,QAAkC,aAAlC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,eAAT,QAAgC,WAAhC;;AAEA,MAAMC,OAAO,GAAG,IAAIL,aAAJ,EAAhB;;AAEA,SAASM,GAAT,GAAe;AAAA;;AACb,QAAM,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAkBC,QAAlB,IAA8BR,iBAAiB,EAArD;AACA,QAAM,CAACS,UAAD,EAAaC,YAAb,IAA6Bb,QAAQ,CAAE,aAAF,CAA3C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMa,IAAI,GAAGR,eAAe,EAA5B;AACAS,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,QAAIG,MAAM,GAAGH,IAAI,CAACI,YAAlB;;AAEA,QAAID,MAAJ,EAAY;AAEVE,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEAV,MAAAA,OAAO,CAACc,cAAR,CAAuBJ,MAAvB;AAEAN,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAE,WADC;AAEPb,QAAAA,KAAK,EAAEQ;AAFA,OAAD,CAAR;AAIAN,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAE,aADC;AAEPf,QAAAA,OAAO,EAAEA;AAFF,OAAD,CAAR;AAKAA,MAAAA,OAAO,CAACgB,gBAAR,CAAyBX,UAAzB,EACGY,IADH,CACQ,UAAUC,IAAV,EAAgB;AACpB;AACA;AACA;AACA;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCK,IAAnC;AACD,OAPH,EAOI,UAASC,GAAT,EAAc;AACdP,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCM,GAArC;AACD,OATH;AAWAnB,MAAAA,OAAO,CAACoB,KAAR,GAAgBH,IAAhB,CAAsBd,IAAD,IAAU;AAC7BC,QAAAA,QAAQ,CAAC;AACPW,UAAAA,IAAI,EAAE,UADC;AAEPZ,UAAAA;AAFO,SAAD,CAAR;AAID,OALD;AAMAH,MAAAA,OAAO,CAACgB,gBAAR,GAA2BC,IAA3B,CAAiCI,SAAD,IAAe;AAC7CjB,QAAAA,QAAQ,CAAC;AACPW,UAAAA,IAAI,EAAE,eADC;AAEPM,UAAAA;AAFO,SAAD,CAAR;AAID,OALD;AAMArB,MAAAA,OAAO,CAACsB,WAAR,CAAoB,wBAApB,EAA8CL,IAA9C,CAAoDM,QAAD,IACjDnB,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAE,qBADC;AAEPS,QAAAA,eAAe,EAAED;AAFV,OAAD,CADV;AAMD;AACF,GAnDQ,EAmDN,CAACrB,KAAD,EAAQE,QAAR,CAnDM,CAAT;AAoDA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACG,CAACF,KAAD,iBAAU,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADb,EAEGA,KAAK,iBAAI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEF,OAArB;AAA8B,MAAA,IAAI,EAAEG;AAApC;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA/DQF,G;UAC6BL,iB;;;KAD7BK,G;AAiET,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport SpotifyWebApi from \"spotify-web-api-js\"\nimport './App.css'\nimport { useDataLayerValue } from './DataLayer'\nimport Downloader from './Downloader'\nimport Login from './Login'\nimport { getTokenFromUrl } from './spotify'\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token, user }, dispatch] = useDataLayerValue();\n  const [other_user, setOtherUser] = useState (\"d3miwarrior\");\n\n  useEffect(() => {\n    // Set token\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    if (_token) {\n\n      console.log(_token);\n      \n      spotify.setAccessToken(_token);\n\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: spotify,\n      });\n\n      spotify.getUserPlaylists(other_user)\n        .then(function (data) {\n          // dispatch({\n          //   type: \"SET_OTHER_USER_PLAYLISTS\",\n          //   other_user,\n          // });\n          console.log('Retrieved playlists', data);\n        },function(err) {\n          console.log('Something went wrong!', err);\n        });\n      \n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user,\n        });\n      });\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists,\n        });\n      });\n      spotify.getPlaylist(\"2ILLL6Ep7x6ahuHoSHvptu\").then((response) =>\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        })\n      );\n    }\n  }, [token, dispatch]);\n  return (\n    <div className=\"app\">\n      {!token && <Login />}\n      {token && <Downloader spotify={spotify} user={user} />}\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}